version: "3.4"
services:
  db:
    image: postgres:12.2
    ports:
      - "${DOCKER_HOST_DATABASE_PORT}:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: "${DATABASE_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - "./docker/data/postgres-bla-${COMPOSE_PROJECT_NAME}:/var/lib/postgresql/data"

  api:
    build:
      context: ./backend
      target: "${MIX_ENV}"
      args:
        DOCKER_HOST_USER_NAME: "${DOCKER_HOST_USER_NAME}"
        IS_E2E: "${IS_E2E:-false}"
    image: "ebnis-be-${MIX_ENV}"
    depends_on:
      - "db"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --head --fail http://${BACKEND_SERVER_HOST}:${PORT}${BACKEND_HEALTH_CHECK_URL}"]
      interval: 600s
      timeout: 5s
      retries: 5
      start_period: 10s
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    user: "${DOCKER_HOST_USER_NAME}"
    env_file: "${DOCKER_ENV_FILE}"
    ports:
      - "${DOCKER_HOST_API_PORT}:${PORT}"
    volumes:
      - "./backend:/home/${DOCKER_HOST_USER_NAME}/src"
      - "not_used_build:/home/${DOCKER_HOST_USER_NAME}/src/_build"
      - "not_used_elixir_ls:/home/${DOCKER_HOST_USER_NAME}/src/.elixir_ls"
      - "not_used_deps:/home/${DOCKER_HOST_USER_NAME}/src/deps"

  cra:
    build:
      context: ./frontend
      args:
        NODE_ENV: "${NODE_ENV}"
    # without this, react scripts 3.4.1 will not attach to tty
    stdin_open: true
    image: "ebnis-fe-${NODE_ENV}"
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    # depends_on:
    #   - "api"
    env_file: "${DOCKER_ENV_FILE}"
    ports:
      - "${WEB_PORT}:${PORT}"
    volumes:
      - "./frontend:/home/node/ebnis-web"
      - "not_used_node_modules:/home/node/ebnis-web/node_modules"

volumes:
  not_used_build:
  not_used_node_modules:
  not_used_elixir_ls:
  not_used_deps:
