services:
  db:
    image: "postgres:13.3"
    ports:
      - "${DOCKER_HOST_DATABASE_PORT}:5432"
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "${DATABASE_NAME}"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -U postgres"
      interval: "10s"
      timeout: "5s"
      retries: 5
      start_period: "10s"
    volumes:
      - "./docker/data/postgres-${COMPOSE_PROJECT_NAME:-ebnis}:/var/lib/postgresql/data"
  ex:
    build:
      context: "./ex"
      target: "${MIX_ENV}"
      args:
        IS_E2E: "${IS_E2E:-false}"
    image: "ebnis-elixir:0.0.0"
    depends_on:
      - "db"
    # healthcheck:
    #   test:
    #     - "CMD-SHELL"
    #     - "curl --silent --head --fail http://${BACKEND_SERVER_HOST}:${PORT}${BACKEND_HEALTH_CHECK_URL}"
    #   interval: "600s"
    #   timeout: "5s"
    #   retries: 5
    #   start_period: "10s"
    entrypoint:
      - "/usr/local/bin/entrypoint.sh"
    user: "ebnis"
    env_file: "${DOCKER_ENV_FILE:-.env}"
    ports:
      - "${DOCKER_HOST_API_PORT}:${PORT}"
    volumes:
      - "./ex:/app"
      - "ex_not_used__build:/app/_build/"
      - "ex_not_used_deps:/app/deps/"
      - "ex_not_used_.elixir_ls:/app/.elixir_ls/"
  js: &js
    build:
      context: "./js"
      dockerfile: "Dockerfile"
      args:
        APT_FETCH: "true"
    stdin_open: true
    image: "ebnis-js:0.0.0"
    entrypoint:
      - "/usr/local/bin/entrypoint.sh"
    env_file: "${DOCKER_ENV_FILE:-.env}"
    user: "node"
  cra:
    <<: *js
    ports:
      - "${DOCKER_HOST_WEB_PORT}:${PORT}"
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        /usr/local/bin/entrypoint.sh
        yarn start cra.dev
    volumes:
      - "./js:/app"
        # node_modules
      - "cra_not_used_root_node_modules:/app/node_modules/"
      - "cra_not_used_shared_node_modules:/app/packages/shared/node_modules/"
      - "cra_not_used_jsx_node_modules:/app/packages/jsx/node_modules/"
      - "cra_not_used_node_modules:/app/packages/cra/node_modules/"
      # coverage folders
      - "cra_not_used_coverage:/app/packages/cra/coverage/"
      - "cra_not_used_jsx_coverage:/app/packages/jsx/coverage/"
      # build folders
      - "cra_not_used_build:/app/packages/cra/build/"
      # excluded packages
      - "cra_not_used_cypress:/app/packages/cy/"

volumes:
  # elixir
  ex_not_used__build:
  ex_not_used_deps:
  ex_not_used_.elixir_ls:
  # cra
  # node_modules
  cra_not_used_root_node_modules:
  cra_not_used_shared_node_modules:
  cra_not_used_jsx_node_modules:
  cra_not_used_node_modules:
  # coverage folder
  cra_not_used_coverage:
  cra_not_used_jsx_coverage:
  # build folders
  cra_not_used_build:
  # excluded packages
  cra_not_used_cypress:
